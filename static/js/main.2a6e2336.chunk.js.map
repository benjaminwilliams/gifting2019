{"version":3,"sources":["utils/constants.ts","utils/encrypt.ts","generate/generate.ts","generate/index.tsx","decode/decode.tsx","App.tsx","serviceWorker.js","index.js"],"names":["KEY","people","encrypt","text","key","replace","encodeForHtml","CryptoJS","AES","toString","generate","doEncode","removeCurrentPerson","person","allPeople","slice","personPosition","findIndex","p","splice","calculateMatch","Math","floor","random","length","isValidResult","matches","hasInvalid","find","match","console","log","values","undefined","list1","list2","output","calculateMatches","push","formatedMatches","hasValidResult","forEach","formatMatches","getValidMatch","encryptMatches","Generate","props","encode","params","debug","matched","className","map","index","href","Decode","React","useState","code","setCode","value","setValue","show","setShow","decode","newValue","decodeForHtml","decrypt","enc","Utf8","useEffect","onChange","e","target","style","padding","fontSize","onClick","App","basename","process","path","component","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2a6e2336.chunk.js","sourcesContent":["export const KEY = 'kjhdihd&*7hdsjgsi5t8654hgJgd'\r\n\r\nexport const people: string[] = [\r\n  \"Benjamin\",\r\n  \"Douglas\",\r\n  \"Lauretta\",\r\n  \"Julie\",\r\n  \"Kate\",\r\n  \"Michael\",\r\n  \"Steven\",\r\n  \"Leah\"\r\n]","import CryptoJS from 'crypto-js'\r\n\r\n// Note: while a cypto library is being used here, all code here is run on the frontend\r\n// and is not designed for security at all\r\n//\r\n// These functions are purely to make people names not human readable\r\n\r\nfunction encodeForHtml(text: string): string {\r\n  return text\r\n      .replace(/&/g, \"&amp;\")\r\n      .replace(/</g, \"&lt;\")\r\n      .replace(/\\//g, \"%2F\")\r\n      .replace(/>/g, \"&gt;\")\r\n      .replace(/\"/g, \"&quot;\")\r\n      .replace(/'/g, \"&#039;\")\r\n}\r\n\r\nfunction decodeForHtml(text: string): string {\r\n  return text\r\n  .replace(\"&amp;\", \"&\")\r\n  .replace(\"&lt;\", \"<\")\r\n  .replace(\"%2F\",\"/\")\r\n  .replace(\"&gt;\",\">\")\r\n  .replace(\"&quot;\",'\"')\r\n  .replace(\"&#039;\", \"'\")\r\n}\r\n\r\nexport function encrypt(text: string, key: string): string {\r\n  return encodeForHtml(CryptoJS.AES.encrypt(text, key).toString())\r\n}\r\n\r\nexport function decrypt(text: string, key: string): string {\r\n  return decodeForHtml(CryptoJS.AES.decrypt(text, key).toString(CryptoJS.enc.Utf8))\r\n}\r\n\r\n","import { KEY } from \"../utils/constants\"\r\nimport { encrypt } from \"../utils/encrypt\"\r\n\r\ninterface Pairing {\r\n  person: string,\r\n  values: Array<string | undefined>\r\n}\r\n\r\ninterface FormatedPairing { \r\n  person: string,\r\n  values: string\r\n}\r\n\r\nfunction generate(people: Array<string>, doEncode: boolean): Array<FormatedPairing>{\r\n\r\n  function removeCurrentPerson (person: string, people: Array<string>): Array<string> {\r\n    const allPeople = people.slice(0) //shallow copy\r\n    const personPosition = allPeople.findIndex(p => p === person)\r\n    if(personPosition >= 0){\r\n      allPeople.splice(personPosition, 1) \r\n    }\r\n    return allPeople\r\n  }\r\n\r\n  function calculateMatch (people: Array<string>): string {\r\n    \r\n    const randomPosition = Math.floor(Math.random() * people.length)\r\n    return people[randomPosition]\r\n  }\r\n\r\n  function calculateMatches (list1: Array<string>, list2: Array<string>): Array<string | undefined> {\r\n    let matches\r\n    \r\n    function generate() {\r\n      \r\n      const match1 = calculateMatch(list1)\r\n      const match2 = calculateMatch(list2)\r\n\r\n      return [match1, match2]\r\n    }\r\n    \r\n    do { matches = generate() } \r\n    while (matches[0] === matches[1] && (list1.length !== 1) )\r\n   \r\n    return matches\r\n  }\r\n\r\n  function encryptMatches (matches: Array<FormatedPairing>, key: string): Array<FormatedPairing> {\r\n    \r\n    let output: Array<FormatedPairing> = []\r\n    matches.forEach(match => {\r\n      output.push({person: match.person, values: encrypt(match.values, key)})\r\n    })\r\n\r\n    return output\r\n  }\r\n\r\n  function formatMatches (matches: Array<Pairing>): Array<FormatedPairing>  {\r\n\r\n    const output: Array<FormatedPairing> = []\r\n\r\n    matches.forEach(match => {\r\n      output.push({ person: match.person, values: `${match.values[0]} and ${match.values[1]}` })\r\n    })\r\n\r\n    return output\r\n  }\r\n\r\n  function isValidResult (matches: Array<Pairing>): boolean {\r\n    const hasInvalid = matches.find(match => {\r\n      console.log('values', match.values[0], match.values[1])\r\n      return match.values[0] === undefined || match.values[1] === undefined\r\n    })\r\n    console.log('hasInvalid', hasInvalid)\r\n    return hasInvalid !== undefined\r\n  }\r\n\r\n  function match (people: Array<string>): Array<Pairing> {\r\n    const list1: Array<string> = people.slice(0)\r\n    const list2: Array<string> = people.slice(0)\r\n    const output: Array<Pairing> = []\r\n    for (const person of people){\r\n      const group1 = removeCurrentPerson(person, list1)\r\n      const group2 = removeCurrentPerson(person, list2)\r\n      const matches: Array<string | undefined> = calculateMatches(group1, group2)\r\n      list1.splice(list1.findIndex(p => p === matches[0]), 1)\r\n      list2.splice(list2.findIndex(p => p === matches[1]), 1)\r\n      output.push({person, values: matches})\r\n    }\r\n    return output\r\n  }\r\n\r\n  function getValidMatch (people: Array<string>): Array<FormatedPairing> {\r\n    let matches\r\n    let hasValidResult\r\n  \r\n    do {\r\n      matches = match(people)\r\n      hasValidResult = isValidResult(matches)\r\n    }\r\n    while (hasValidResult === true)\r\n    \r\n    return formatMatches(matches)\r\n  }\r\n\r\n  const formatedMatches = getValidMatch(people)\r\n\r\n  return doEncode ? encryptMatches(formatedMatches, KEY) : formatedMatches \r\n\r\n}\r\n\r\nexport default generate\r\n\r\n\r\n  \r\n  ","import React from 'react';\r\nimport '../App.css';\r\nimport generate from './generate';\r\nimport { people } from '../utils/constants'\r\n\r\nfunction Generate(props:any){\r\n  const encode = props.match.params.debug !== \"debug\"\r\n  console.log('doEncode', props.match.params.debug)\r\n  console.log('encode', encode)\r\n  const matched = generate(people, encode)\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <ul>          \r\n          {matched.map((match, index) => {\r\n            return (<li key={`match${index}`}><a href={`https://benjaminwilliams.github.io/gifting2019/code/${match.values}`}>{match.person}</a> gets {match.values} </li>)\r\n          })}\r\n        </ul>\r\n      </header>\r\n      \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Generate;\r\n\r\n","import React from 'react';\r\nimport { decrypt } from '../utils/encrypt'\r\nimport { KEY } from '../utils/constants'\r\n\r\nfunction Decode(props: any) {\r\n  \r\n  const [ code, setCode] = React.useState(props.match.params.code || \"\")\r\n  const [ value, setValue ] = React.useState(\"Press button above to decode\")\r\n  const [ show, setShow ] = React.useState(false)\r\n  \r\n\r\n  console.log(props.match)\r\n  const decode = () => {\r\n    const newValue = decrypt(code, KEY)\r\n    setValue(newValue === \"\" ? \"error\" : newValue)\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    decode()\r\n  }, [code])\r\n\r\n  return (\r\n   <div className=\"App-header\">\r\n     <h1>Williams Family Secret Santa 2020</h1>\r\n     {code.length === 0 && \r\n     <>\r\n      <input value={code} onChange={e => setCode(e.target.value)} style={{padding: '20px', fontSize: '30px'}} />\r\n      <button onClick={decode} className='button'>Decode</button>\r\n      </>\r\n     }\r\n     <p className='instructions'>You will see the 2 people you will give gifts to once you click the button below. you can come back to this page any time if you use the same link </p>\r\n     <button onClick={() => setShow(true)} className='button'>Show</button>\r\n     {show && <h2>{value}</h2>}\r\n\r\n     {value === 'error' && <div>invalid!!!!</div>}\r\n   </div>\r\n  )\r\n}\r\n\r\nexport default Decode;\r\n\r\n\r\n","import React from 'react';\r\nimport './App.css';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link\r\n} from \"react-router-dom\";\r\n\r\nimport Generate from './generate'\r\nimport Decode from './decode/decode'\r\n\r\nfunction App() {\r\n  return (\r\n    <Router basename={process.env.PUBLIC_URL}>\r\n    <div>\r\n      <Switch>\r\n      \r\n        <Route path={\"/generate/:debug\"} component={Generate} />\r\n        <Route path={\"/code/:code\"} component={Decode} /> \r\n        <Route path=\"/\" component={Decode} /> \r\n      </Switch>\r\n    </div>\r\n  </Router>\r\n  )\r\n}\r\n\r\nexport default App;\r\n\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}